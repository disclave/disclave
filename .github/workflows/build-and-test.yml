
name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install
    - run: yarn bootstrap
    - run: yarn build
      env:
        API_URL: http://example.com/mock
        FIREBASE_CERT: '{"type":"service_account","project_id":"mock-id","private_key_id":"randomprivatekey123","private_key":"herehoestheprivatekey","client_email":"user@example.com","client_id":"23423423423","auth_uri":"http://example.com","token_uri":"http://example.com","auth_provider_x509_cert_url":"http://example.com","client_x509_cert_url":"http://example.com"}'
        FIREBASE_CLIENT_CONFIG: '{"apiKey":"sfasddfasdf","authDomain":"example.com","projectId":"sdfsd324","storageBucket":"example.com","messagingSenderId":"564","appId":"453453","measurementId":"1233"}'
        IFRAME_URL: http://example.com/mock/{url}
        DB_URI: mongodb+srv://user:pass@cluster.random.mongodb.net/db
        DB_NAME: db-name
        MJ_API_KEY: mjapikey
        MJ_API_SECRET: mjapisecret
        MJ_TEMPLATE_EMAIL_VERIFICATION: 0
        PRIVACY_POLICY: http://example.com/privacy-policy
        ACCEPTABLE_USE_POLICY: http://example.com/acceptable-use-policy
        AWS_ACCESS_KEY: AwsAccessKey
        AWS_SECRET_ACCESS_KEY: AwsSecreyKey
        AWS_BUCKET_NAME_PAGES: pages-bucket-name
    - run: yarn test

